import { __decorate } from "tslib";
import { ChangeDetectionStrategy, Component, ElementRef, forwardRef, HostBinding, HostListener, Inject, Input, Optional, Self, } from '@angular/core';
import { TUI_IS_MOBILE, tuiIsNativeFocused, } from '@taiga-ui/cdk';
import { TuiDropdownDirective } from '@taiga-ui/core/directives/dropdown';
import { TUI_COMMON_ICONS, TUI_DATA_LIST_HOST, TUI_OPTION_CONTENT, } from '@taiga-ui/core/tokens';
import { shouldCall } from '@tinkoff/ng-event-plugins';
import { TuiDataListComponent } from '../data-list.component';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/core/components/svg";
import * as i2 from "@tinkoff/ng-polymorpheus";
import * as i3 from "@angular/common";
import * as i4 from "../data-list.component";
import * as i5 from "@taiga-ui/core/directives/dropdown";
function shouldFocus({ currentTarget }) {
    return !this.isMobile && !tuiIsNativeFocused(currentTarget);
}
// TODO: Consider all use cases for aria roles
export class TuiOptionComponent {
    constructor(isMobile, content, dataList, el, host, dropdown, icons) {
        this.isMobile = isMobile;
        this.content = content;
        this.dataList = dataList;
        this.el = el;
        this.host = host;
        this.dropdown = dropdown;
        this.icons = icons;
        /** @deprecated use size on {@link TuiDataListComponent} instead */
        this.size = null;
        this.role = 'option';
        this.disabled = false;
    }
    get active() {
        return !!this.dropdown && !!this.dropdown.dropdownBoxRef;
    }
    onClick() {
        if (this.host && this.value !== undefined) {
            this.host.handleOption(this.value);
        }
    }
    // @bad TODO: Consider aria-activedescendant for proper accessibility implementation
    onMouseMove({ currentTarget }) {
        currentTarget.focus({ preventScroll: true });
    }
    // Preventing focus loss upon focused option removal
    ngOnDestroy() {
        var _a;
        (_a = this.dataList) === null || _a === void 0 ? void 0 : _a.handleFocusLossIfNecessary(this.el.nativeElement);
    }
}
TuiOptionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiOptionComponent, deps: [{ token: TUI_IS_MOBILE }, { token: TUI_OPTION_CONTENT, optional: true }, { token: forwardRef(() => TuiDataListComponent), optional: true }, { token: ElementRef }, { token: TUI_DATA_LIST_HOST, optional: true }, { token: TuiDropdownDirective, optional: true, self: true }, { token: TUI_COMMON_ICONS }], target: i0.ɵɵFactoryTarget.Component });
TuiOptionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiOptionComponent, selector: "button[tuiOption], a[tuiOption]", inputs: { size: "size", role: "role", disabled: "disabled", value: "value" }, host: { attributes: { "tabIndex": "-1", "type": "button" }, listeners: { "click": "onClick()", "mousemove.silent": "onMouseMove($event)" }, properties: { "attr.disabled": "disabled || null", "attr.data-size": "this.size", "attr.role": "this.role", "class._with-dropdown": "this.active" } }, ngImport: i0, template: "<ng-container *polymorpheusOutlet=\"content || base as text; context: {$implicit: base}\">\n    {{ text }}\n</ng-container>\n<ng-template #base>\n    <ng-content></ng-content>\n    <tui-svg\n        *ngIf=\"dropdown\"\n        class=\"t-arrow\"\n        [src]=\"icons.more\"\n    ></tui-svg>\n</ng-template>\n", styles: [":host{-webkit-appearance:none;-moz-appearance:none;appearance:none;padding:0;border:0;background:none;font-size:inherit;line-height:inherit;text-decoration:none;transition-property:background;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;justify-content:space-between;text-align:left;color:var(--tui-text-01);border-radius:var(--tui-radius-s);outline:none;cursor:pointer;background-clip:padding-box}:host:disabled{opacity:var(--tui-disabled-opacity);cursor:default}:host:focus,:host._with-dropdown{background-color:var(--tui-clear)}:host :host-context([data-list-size=\"s\"]),:host :host-context([data-list-size=\"xs\"]),:host[data-size=s][data-size=s],:host[data-size=xs][data-size=xs]{display:flex;align-items:center;box-sizing:border-box;margin:var(--tui-data-list-margin) 0;font:var(--tui-font-text-s);min-height:2rem;padding:.3125rem .5rem}:host :host-context([data-list-size=\"m\"]),:host[data-size=m][data-size=m]{display:flex;align-items:center;box-sizing:border-box;margin:var(--tui-data-list-margin) 0;font:var(--tui-font-text-s);min-height:2.5rem;padding:.375rem .5rem}:host :host-context([data-list-size=\"l\"]),:host[data-size=l][data-size=l]{display:flex;align-items:center;box-sizing:border-box;margin:var(--tui-data-list-margin) 0;font:var(--tui-font-text-m);min-height:2.75rem;padding:.375rem .625rem}.t-arrow{margin:0 -.5rem 0 .75rem}\n"], components: [{ type: i1.TuiSvgComponent, selector: "tui-svg", inputs: ["src"] }], directives: [{ type: i2.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }, { type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
__decorate([
    shouldCall(shouldFocus)
], TuiOptionComponent.prototype, "onMouseMove", null);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiOptionComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'button[tuiOption], a[tuiOption]',
                    templateUrl: './option.template.html',
                    styleUrls: ['./option.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    host: {
                        tabIndex: '-1',
                        type: 'button',
                        '[attr.disabled]': 'disabled || null',
                    },
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_IS_MOBILE]
                }] }, { type: undefined, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [TUI_OPTION_CONTENT]
                }] }, { type: i4.TuiDataListComponent, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [forwardRef(() => TuiDataListComponent)]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }, { type: undefined, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [TUI_DATA_LIST_HOST]
                }] }, { type: i5.TuiDropdownDirective, decorators: [{
                    type: Optional
                }, {
                    type: Self
                }, {
                    type: Inject,
                    args: [TuiDropdownDirective]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_COMMON_ICONS]
                }] }]; }, propDecorators: { size: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-size']
            }], role: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.role']
            }], disabled: [{
                type: Input
            }], value: [{
                type: Input
            }], active: [{
                type: HostBinding,
                args: ['class._with-dropdown']
            }], onClick: [{
                type: HostListener,
                args: ['click']
            }], onMouseMove: [{
                type: HostListener,
                args: ['mousemove.silent', ['$event']]
            }] } });
//# sourceMappingURL=data:application/json;base64,