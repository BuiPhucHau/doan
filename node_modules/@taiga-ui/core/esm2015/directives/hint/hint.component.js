import { __decorate } from "tslib";
import { ChangeDetectionStrategy, Component, ElementRef, HostBinding, HostListener, Inject, Optional, Self, } from '@angular/core';
import { EMPTY_CLIENT_RECT, tuiClamp, TuiDestroyService, TuiHoveredService, tuiPure, tuiPx, } from '@taiga-ui/cdk';
import { tuiPositionAccessorFor, TuiRectAccessor, tuiRectAccessorFor, } from '@taiga-ui/core/abstract';
import { tuiFadeIn } from '@taiga-ui/core/animations';
import { TuiModeDirective } from '@taiga-ui/core/directives/mode';
import { TuiPositionService, TuiVisualViewportService } from '@taiga-ui/core/services';
import { TUI_ANIMATION_OPTIONS, TUI_VIEWPORT } from '@taiga-ui/core/tokens';
import { tuiIsObscured } from '@taiga-ui/core/utils';
import { POLYMORPHEUS_CONTEXT } from '@tinkoff/ng-polymorpheus';
import { map, takeUntil } from 'rxjs/operators';
import { TuiHintDirective } from './hint.directive';
import { TuiHintHoverDirective } from './hint-hover.directive';
import { TuiHintPointerDirective } from './hint-pointer.directive';
import { TuiHintPositionDirective } from './hint-position.directive';
import * as i0 from "@angular/core";
import * as i1 from "@tinkoff/ng-polymorpheus";
import * as i2 from "rxjs";
import * as i3 from "@taiga-ui/core/abstract";
import * as i4 from "./hint-hover.directive";
import * as i5 from "@taiga-ui/core/directives/mode";
import * as i6 from "@taiga-ui/core/services";
const GAP = 4;
export class TuiHintComponent {
    constructor(hovered$, position$, destroy$, animation, pointer, accessor, el, polymorpheus, hover, mode, vvs, viewport) {
        var _a;
        this.animation = animation;
        this.pointer = pointer;
        this.accessor = accessor;
        this.el = el;
        this.polymorpheus = polymorpheus;
        this.hover = hover;
        this.mode = mode;
        this.vvs = vvs;
        this.viewport = viewport;
        this.appearance = this.polymorpheus.$implicit.appearance || ((_a = this.mode) === null || _a === void 0 ? void 0 : _a.mode);
        position$
            .pipe(map(point => this.vvs.correct(point)), takeUntil(destroy$))
            .subscribe(([top, left]) => {
            this.update(top, left);
        });
        hovered$.pipe(takeUntil(destroy$)).subscribe(hover => this.hover.toggle(hover));
    }
    get content() {
        return this.polymorpheus.$implicit.content;
    }
    get context() {
        return this.polymorpheus.$implicit.context;
    }
    onClick(target) {
        if ((!this.el.nativeElement.contains(target) &&
            !this.hover.el.nativeElement.contains(target)) ||
            tuiIsObscured(this.hover.el.nativeElement)) {
            this.hover.toggle(false);
        }
    }
    update(top, left) {
        const { height, width } = this.el.nativeElement.getBoundingClientRect();
        const { style } = this.el.nativeElement;
        const rect = this.accessor.getClientRect();
        const viewport = this.viewport.getClientRect();
        if (rect === EMPTY_CLIENT_RECT) {
            return;
        }
        const safeLeft = tuiClamp(left, GAP, viewport.width - width - GAP);
        const [beakTop, beakLeft] = this.vvs.correct([
            rect.top + rect.height / 2 - top,
            rect.left + rect.width / 2 - safeLeft,
        ]);
        style.top = tuiPx(top);
        style.left = tuiPx(safeLeft);
        style.setProperty('--top', tuiPx(tuiClamp(beakTop, 0.5, height - 1)));
        style.setProperty('--left', tuiPx(tuiClamp(beakLeft, 0.5, width - 1)));
    }
}
TuiHintComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiHintComponent, deps: [{ token: TuiHoveredService }, { token: TuiPositionService }, { token: TuiDestroyService, self: true }, { token: TUI_ANIMATION_OPTIONS }, { token: TuiHintPointerDirective, optional: true }, { token: TuiRectAccessor }, { token: ElementRef }, { token: POLYMORPHEUS_CONTEXT }, { token: TuiHintHoverDirective }, { token: TuiModeDirective, optional: true }, { token: TuiVisualViewportService }, { token: TUI_VIEWPORT }], target: i0.ɵɵFactoryTarget.Component });
TuiHintComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiHintComponent, selector: "tui-hint", host: { listeners: { "document:click": "onClick($event.target)" }, properties: { "@tuiFadeIn": "animation", "class._untouchable": "pointer", "attr.data-appearance": "this.appearance" } }, providers: [
        TuiDestroyService,
        TuiPositionService,
        TuiHoveredService,
        tuiPositionAccessorFor('hint', TuiHintPositionDirective),
        tuiRectAccessorFor('hint', TuiHintDirective),
    ], ngImport: i0, template: `
        <ng-content></ng-content>
        <span
            *polymorpheusOutlet="content as text; context: context"
            [innerHTML]="text"
        ></span>
    `, isInline: true, styles: [":host{position:absolute;max-width:18rem;min-height:var(--tui-height-m);padding:.75rem 1rem;background:var(--tui-primary);border-radius:var(--tui-radius-l);color:var(--tui-primary-text);box-sizing:border-box;font:var(--tui-font-text-s);white-space:pre-line;word-wrap:break-word}:host:before{content:\"\";position:absolute;top:var(--top);left:var(--left);width:.5rem;height:.5rem;border-radius:.125rem;box-sizing:border-box;background:inherit;transform:translate(-50%,-50%) rotate(45deg)}:host[data-appearance=error]{background:var(--tui-error-fill)}:host[data-appearance=onDark]{background:var(--tui-elevation-02);color:var(--tui-text-01);filter:drop-shadow(0 0 .125rem rgba(0,0,0,.16)) drop-shadow(0 1.5rem 1rem rgba(0,0,0,.03)) drop-shadow(0 .75rem .75rem rgba(0,0,0,.04)) drop-shadow(0 .25rem .375rem rgba(0,0,0,.05))}:host:not([style*=\"top\"]){visibility:hidden}:host._untouchable{pointer-events:none}\n"], directives: [{ type: i1.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }], animations: [tuiFadeIn], changeDetection: i0.ChangeDetectionStrategy.OnPush });
__decorate([
    tuiPure
], TuiHintComponent.prototype, "update", null);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiHintComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-hint',
                    template: `
        <ng-content></ng-content>
        <span
            *polymorpheusOutlet="content as text; context: context"
            [innerHTML]="text"
        ></span>
    `,
                    styleUrls: ['./hint.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [
                        TuiDestroyService,
                        TuiPositionService,
                        TuiHoveredService,
                        tuiPositionAccessorFor('hint', TuiHintPositionDirective),
                        tuiRectAccessorFor('hint', TuiHintDirective),
                    ],
                    animations: [tuiFadeIn],
                    host: {
                        '[@tuiFadeIn]': 'animation',
                        '[class._untouchable]': 'pointer',
                    },
                }]
        }], ctorParameters: function () { return [{ type: i2.Observable, decorators: [{
                    type: Inject,
                    args: [TuiHoveredService]
                }] }, { type: i2.Observable, decorators: [{
                    type: Inject,
                    args: [TuiPositionService]
                }] }, { type: i2.Observable, decorators: [{
                    type: Self
                }, {
                    type: Inject,
                    args: [TuiDestroyService]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_ANIMATION_OPTIONS]
                }] }, { type: undefined, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [TuiHintPointerDirective]
                }] }, { type: i3.TuiRectAccessor, decorators: [{
                    type: Inject,
                    args: [TuiRectAccessor]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [POLYMORPHEUS_CONTEXT]
                }] }, { type: i4.TuiHintHoverDirective, decorators: [{
                    type: Inject,
                    args: [TuiHintHoverDirective]
                }] }, { type: i5.TuiModeDirective, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [TuiModeDirective]
                }] }, { type: i6.TuiVisualViewportService, decorators: [{
                    type: Inject,
                    args: [TuiVisualViewportService]
                }] }, { type: i3.TuiRectAccessor, decorators: [{
                    type: Inject,
                    args: [TUI_VIEWPORT]
                }] }]; }, propDecorators: { appearance: [{
                type: HostBinding,
                args: ['attr.data-appearance']
            }], onClick: [{
                type: HostListener,
                args: ['document:click', ['$event.target']]
            }], update: [] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGludC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JlL2RpcmVjdGl2ZXMvaGludC9oaW50LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsT0FBTyxFQUNILHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsVUFBVSxFQUNWLFdBQVcsRUFDWCxZQUFZLEVBQ1osTUFBTSxFQUNOLFFBQVEsRUFDUixJQUFJLEdBQ1AsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUNILGlCQUFpQixFQUNqQixRQUFRLEVBRVIsaUJBQWlCLEVBQ2pCLGlCQUFpQixFQUNqQixPQUFPLEVBQ1AsS0FBSyxHQUNSLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFDSCxzQkFBc0IsRUFDdEIsZUFBZSxFQUNmLGtCQUFrQixHQUNyQixNQUFNLHlCQUF5QixDQUFDO0FBQ2pDLE9BQU8sRUFBQyxTQUFTLEVBQUMsTUFBTSwyQkFBMkIsQ0FBQztBQUNwRCxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSxnQ0FBZ0MsQ0FBQztBQUVoRSxPQUFPLEVBQUMsa0JBQWtCLEVBQUUsd0JBQXdCLEVBQUMsTUFBTSx5QkFBeUIsQ0FBQztBQUNyRixPQUFPLEVBQUMscUJBQXFCLEVBQUUsWUFBWSxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFFMUUsT0FBTyxFQUFDLGFBQWEsRUFBQyxNQUFNLHNCQUFzQixDQUFDO0FBQ25ELE9BQU8sRUFBQyxvQkFBb0IsRUFBc0IsTUFBTSwwQkFBMEIsQ0FBQztBQUVuRixPQUFPLEVBQUMsR0FBRyxFQUFFLFNBQVMsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBRTlDLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLGtCQUFrQixDQUFDO0FBQ2xELE9BQU8sRUFBQyxxQkFBcUIsRUFBQyxNQUFNLHdCQUF3QixDQUFDO0FBQzdELE9BQU8sRUFBQyx1QkFBdUIsRUFBQyxN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T0FBTztzQkFETixZQUFZO3VCQUFDLGdCQUFnQixFQUFFLENBQUMsZUFBZSxDQUFDO2dCQVl6QyxNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtBbmltYXRpb25PcHRpb25zfSBmcm9tICdAYW5ndWxhci9hbmltYXRpb25zJztcbmltcG9ydCB7XG4gICAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gICAgQ29tcG9uZW50LFxuICAgIEVsZW1lbnRSZWYsXG4gICAgSG9zdEJpbmRpbmcsXG4gICAgSG9zdExpc3RlbmVyLFxuICAgIEluamVjdCxcbiAgICBPcHRpb25hbCxcbiAgICBTZWxmLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gICAgRU1QVFlfQ0xJRU5UX1JFQ1QsXG4gICAgdHVpQ2xhbXAsXG4gICAgVHVpQ29udGV4dFdpdGhJbXBsaWNpdCxcbiAgICBUdWlEZXN0cm95U2VydmljZSxcbiAgICBUdWlIb3ZlcmVkU2VydmljZSxcbiAgICB0dWlQdXJlLFxuICAgIHR1aVB4LFxufSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7XG4gICAgdHVpUG9zaXRpb25BY2Nlc3NvckZvcixcbiAgICBUdWlSZWN0QWNjZXNzb3IsXG4gICAgdHVpUmVjdEFjY2Vzc29yRm9yLFxufSBmcm9tICdAdGFpZ2EtdWkvY29yZS9hYnN0cmFjdCc7XG5pbXBvcnQge3R1aUZhZGVJbn0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvYW5pbWF0aW9ucyc7XG5pbXBvcnQge1R1aU1vZGVEaXJlY3RpdmV9IGZyb20gJ0B0YWlnYS11aS9jb3JlL2RpcmVjdGl2ZXMvbW9kZSc7XG5pbXBvcnQge1R1aVBvcnRhbEl0ZW19IGZyb20gJ0B0YWlnYS11aS9jb3JlL2ludGVyZmFjZXMnO1xuaW1wb3J0IHtUdWlQb3NpdGlvblNlcnZpY2UsIFR1aVZpc3VhbFZpZXdwb3J0U2VydmljZX0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvc2VydmljZXMnO1xuaW1wb3J0IHtUVUlfQU5JTUFUSU9OX09QVElPTlMsIFRVSV9WSUVXUE9SVH0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvdG9rZW5zJztcbmltcG9ydCB7VHVpUG9pbnR9IGZyb20gJ0B0YWlnYS11aS9jb3JlL3R5cGVzJztcbmltcG9ydCB7dHVpSXNPYnNjdXJlZH0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvdXRpbHMnO1xuaW1wb3J0IHtQT0xZTU9SUEhFVVNfQ09OVEVYVCwgUG9seW1vcnBoZXVzQ29udGVudH0gZnJvbSAnQHRpbmtvZmYvbmctcG9seW1vcnBoZXVzJztcbmltcG9ydCB7T2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XG5pbXBvcnQge21hcCwgdGFrZVVudGlsfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbmltcG9ydCB7VHVpSGludERpcmVjdGl2ZX0gZnJvbSAnLi9oaW50LmRpcmVjdGl2ZSc7XG5pbXBvcnQge1R1aUhpbnRIb3ZlckRpcmVjdGl2ZX0gZnJvbSAnLi9oaW50LWhvdmVyLmRpcmVjdGl2ZSc7XG5pbXBvcnQge1R1aUhpbnRQb2ludGVyRGlyZWN0aXZlfSBmcm9tICcuL2hpbnQtcG9pbnRlci5kaXJlY3RpdmUnO1xuaW1wb3J0IHtUdWlIaW50UG9zaXRpb25EaXJlY3RpdmV9IGZyb20gJy4vaGludC1wb3NpdGlvbi5kaXJlY3RpdmUnO1xuXG5jb25zdCBHQVAgPSA0O1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3R1aS1oaW50JyxcbiAgICB0ZW1wbGF0ZTogYFxuICAgICAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gICAgICAgIDxzcGFuXG4gICAgICAgICAgICAqcG9seW1vcnBoZXVzT3V0bGV0PVwiY29udGVudCBhcyB0ZXh0OyBjb250ZXh0OiBjb250ZXh0XCJcbiAgICAgICAgICAgIFtpbm5lckhUTUxdPVwidGV4dFwiXG4gICAgICAgID48L3NwYW4+XG4gICAgYCxcbiAgICBzdHlsZVVybHM6IFsnLi9oaW50LnN0eWxlLmxlc3MnXSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgVHVpRGVzdHJveVNlcnZpY2UsXG4gICAgICAgIFR1aVBvc2l0aW9uU2VydmljZSxcbiAgICAgICAgVHVpSG92ZXJlZFNlcnZpY2UsXG4gICAgICAgIHR1aVBvc2l0aW9uQWNjZXNzb3JGb3IoJ2hpbnQnLCBUdWlIaW50UG9zaXRpb25EaXJlY3RpdmUpLFxuICAgICAgICB0dWlSZWN0QWNjZXNzb3JGb3IoJ2hpbnQnLCBUdWlIaW50RGlyZWN0aXZlKSxcbiAgICBdLFxuICAgIGFuaW1hdGlvbnM6IFt0dWlGYWRlSW5dLFxuICAgIGhvc3Q6IHtcbiAgICAgICAgJ1tAdHVpRmFkZUluXSc6ICdhbmltYXRpb24nLFxuICAgICAgICAnW2NsYXNzLl91bnRvdWNoYWJsZV0nOiAncG9pbnRlcicsXG4gICAgfSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpSGludENvbXBvbmVudDxDID0gYW55PiB7XG4gICAgQEhvc3RCaW5kaW5nKCdhdHRyLmRhdGEtYXBwZWFyYW5jZScpXG4gICAgcmVhZG9ubHkgYXBwZWFyYW5jZSA9IHRoaXMucG9seW1vcnBoZXVzLiRpbXBsaWNpdC5hcHBlYXJhbmNlIHx8IHRoaXMubW9kZT8ubW9kZTtcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBASW5qZWN0KFR1aUhvdmVyZWRTZXJ2aWNlKSBob3ZlcmVkJDogT2JzZXJ2YWJsZTxib29sZWFuPixcbiAgICAgICAgQEluamVjdChUdWlQb3NpdGlvblNlcnZpY2UpIHBvc2l0aW9uJDogT2JzZXJ2YWJsZTxUdWlQb2ludD4sXG4gICAgICAgIEBTZWxmKCkgQEluamVjdChUdWlEZXN0cm95U2VydmljZSkgZGVzdHJveSQ6IE9ic2VydmFibGU8dm9pZD4sXG4gICAgICAgIEBJbmplY3QoVFVJX0FOSU1BVElPTl9PUFRJT05TKSByZWFkb25seSBhbmltYXRpb246IEFuaW1hdGlvbk9wdGlvbnMsXG4gICAgICAgIEBPcHRpb25hbCgpIEBJbmplY3QoVHVpSGludFBvaW50ZXJEaXJlY3RpdmUpIHJlYWRvbmx5IHBvaW50ZXI6IHVua25vd24sXG4gICAgICAgIEBJbmplY3QoVHVpUmVjdEFjY2Vzc29yKSBwcm90ZWN0ZWQgcmVhZG9ubHkgYWNjZXNzb3I6IFR1aVJlY3RBY2Nlc3NvcixcbiAgICAgICAgQEluamVjdChFbGVtZW50UmVmKSBwcml2YXRlIHJlYWRvbmx5IGVsOiBFbGVtZW50UmVmPEhUTUxFbGVtZW50PixcbiAgICAgICAgQEluamVjdChQT0xZTU9SUEhFVVNfQ09OVEVYVClcbiAgICAgICAgcHJpdmF0ZSByZWFkb25seSBwb2x5bW9ycGhldXM6IFR1aUNvbnRleHRXaXRoSW1wbGljaXQ8VHVpUG9ydGFsSXRlbTxDPj4sXG4gICAgICAgIEBJbmplY3QoVHVpSGludEhvdmVyRGlyZWN0aXZlKSBwcml2YXRlIHJlYWRvbmx5IGhvdmVyOiBUdWlIaW50SG92ZXJEaXJlY3RpdmUsXG4gICAgICAgIEBPcHRpb25hbCgpXG4gICAgICAgIEBJbmplY3QoVHVpTW9kZURpcmVjdGl2ZSlcbiAgICAgICAgcHJpdmF0ZSByZWFkb25seSBtb2RlOiBUdWlNb2RlRGlyZWN0aXZlIHwgbnVsbCxcbiAgICAgICAgQEluamVjdChUdWlWaXN1YWxWaWV3cG9ydFNlcnZpY2UpXG4gICAgICAgIHByaXZhdGUgcmVhZG9ubHkgdnZzOiBUdWlWaXN1YWxWaWV3cG9ydFNlcnZpY2UsXG4gICAgICAgIEBJbmplY3QoVFVJX1ZJRVdQT1JUKSBwcml2YXRlIHJlYWRvbmx5IHZpZXdwb3J0OiBUdWlSZWN0QWNjZXNzb3IsXG4gICAgKSB7XG4gICAgICAgIHBvc2l0aW9uJFxuICAgICAgICAgICAgLnBpcGUoXG4gICAgICAgICAgICAgICAgbWFwKHBvaW50ID0+IHRoaXMudnZzLmNvcnJlY3QocG9pbnQpKSxcbiAgICAgICAgICAgICAgICB0YWtlVW50aWwoZGVzdHJveSQpLFxuICAgICAgICAgICAgKVxuICAgICAgICAgICAgLnN1YnNjcmliZSgoW3RvcCwgbGVmdF0pID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZSh0b3AsIGxlZnQpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgaG92ZXJlZCQucGlwZSh0YWtlVW50aWwoZGVzdHJveSQpKS5zdWJzY3JpYmUoaG92ZXIgPT4gdGhpcy5ob3Zlci50b2dnbGUoaG92ZXIpKTtcbiAgICB9XG5cbiAgICBnZXQgY29udGVudCgpOiBQb2x5bW9ycGhldXNDb250ZW50PEM+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMucG9seW1vcnBoZXVzLiRpbXBsaWNpdC5jb250ZW50O1xuICAgIH1cblxuICAgIGdldCBjb250ZXh0KCk6IEMgfCB1bmRlZmluZWQge1xuICAgICAgICByZXR1cm4gdGhpcy5wb2x5bW9ycGhldXMuJGltcGxpY2l0LmNvbnRleHQ7XG4gICAgfVxuXG4gICAgQEhvc3RMaXN0ZW5lcignZG9jdW1lbnQ6Y2xpY2snLCBbJyRldmVudC50YXJnZXQnXSlcbiAgICBvbkNsaWNrKHRhcmdldDogSFRNTEVsZW1lbnQpOiB2b2lkIHtcbiAgICAgICAgaWYgKFxuICAgICAgICAgICAgKCF0aGlzLmVsLm5hdGl2ZUVsZW1lbnQuY29udGFpbnModGFyZ2V0KSAmJlxuICAgICAgICAgICAgICAgICF0aGlzLmhvdmVyLmVsLm5hdGl2ZUVsZW1lbnQuY29udGFpbnModGFyZ2V0KSkgfHxcbiAgICAgICAgICAgIHR1aUlzT2JzY3VyZWQodGhpcy5ob3Zlci5lbC5uYXRpdmVFbGVtZW50KVxuICAgICAgICApIHtcbiAgICAgICAgICAgIHRoaXMuaG92ZXIudG9nZ2xlKGZhbHNlKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIEB0dWlQdXJlXG4gICAgcHJpdmF0ZSB1cGRhdGUodG9wOiBudW1iZXIsIGxlZnQ6IG51bWJlcik6IHZvaWQge1xuICAgICAgICBjb25zdCB7aGVpZ2h0LCB3aWR0aH0gPSB0aGlzLmVsLm5hdGl2ZUVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgIGNvbnN0IHtzdHlsZX0gPSB0aGlzLmVsLm5hdGl2ZUVsZW1lbnQ7XG4gICAgICAgIGNvbnN0IHJlY3QgPSB0aGlzLmFjY2Vzc29yLmdldENsaWVudFJlY3QoKTtcbiAgICAgICAgY29uc3Qgdmlld3BvcnQgPSB0aGlzLnZpZXdwb3J0LmdldENsaWVudFJlY3QoKTtcblxuICAgICAgICBpZiAocmVjdCA9PT0gRU1QVFlfQ0xJRU5UX1JFQ1QpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHNhZmVMZWZ0ID0gdHVpQ2xhbXAobGVmdCwgR0FQLCB2aWV3cG9ydC53aWR0aCAtIHdpZHRoIC0gR0FQKTtcbiAgICAgICAgY29uc3QgW2JlYWtUb3AsIGJlYWtMZWZ0XSA9IHRoaXMudnZzLmNvcnJlY3QoW1xuICAgICAgICAgICAgcmVjdC50b3AgKyByZWN0LmhlaWdodCAvIDIgLSB0b3AsXG4gICAgICAgICAgICByZWN0LmxlZnQgKyByZWN0LndpZHRoIC8gMiAtIHNhZmVMZWZ0LFxuICAgICAgICBdKTtcblxuICAgICAgICBzdHlsZS50b3AgPSB0dWlQeCh0b3ApO1xuICAgICAgICBzdHlsZS5sZWZ0ID0gdHVpUHgoc2FmZUxlZnQpO1xuICAgICAgICBzdHlsZS5zZXRQcm9wZXJ0eSgnLS10b3AnLCB0dWlQeCh0dWlDbGFtcChiZWFrVG9wLCAwLjUsIGhlaWdodCAtIDEpKSk7XG4gICAgICAgIHN0eWxlLnNldFByb3BlcnR5KCctLWxlZnQnLCB0dWlQeCh0dWlDbGFtcChiZWFrTGVmdCwgMC41LCB3aWR0aCAtIDEpKSk7XG4gICAgfVxufVxuIl19